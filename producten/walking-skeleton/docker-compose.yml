services:
  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-primary:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-primary
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_URL: http://localhost:8081
      KC_HOSTNAME_ADMIN_URL: http://localhost:8081
    command: start-dev --import-realm
    ports:
      - "8081:8080"
      - "9001:9000"
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      keycloak-network:
        aliases:
          - keycloak
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  keycloak-secondary:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-secondary
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_URL: http://localhost:8082
      KC_HOSTNAME_ADMIN_URL: http://localhost:8082
    command: start-dev --import-realm
    ports:
      - "8082:8080"
      - "9002:9000"
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - keycloak-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  haproxy:
    image: haproxytech/haproxy-ubuntu:3.1.7
    container_name: keycloak-haproxy
    ports:
      - "80:80"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - haproxy-run:/var/run/haproxy
    networks:
      - keycloak-network
    depends_on:
      - keycloak-primary
      - keycloak-secondary
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 3

  gitea:
    image: gitea/gitea:1.23.7
    ports:
      - "3000:3000"
      - "222:22"
    network_mode: "host"
    volumes:
      - ./gitea:/data

  jira:
    image: atlassian/jira-software:latest
    container_name: jira
    ports:
      - "8083:8080"
    environment:
      ATL_JDBC_URL: jdbc:postgresql://jira-db:5432/jiradb
      ATL_JDBC_USER: jira
      ATL_JDBC_PASSWORD: jira
      ATL_DB_USER: jira
      ATL_DB_PASSWORD: jira
      ATL_DB_DATABASE: jiradb
      ATL_JIRA_ADMIN_USERNAME: jan
      ATL_JIRA_ADMIN_PASSWORD: jan
    networks:
      - keycloak-network
    depends_on:
      - jira-db

  jira-db:
    image: postgres:15
    container_name: jira-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: jiradb
      POSTGRES_USER: jira
      POSTGRES_PASSWORD: jira
    volumes:
      - jira_db_data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8089:8080"
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - keycloak-network

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - keycloak-network

networks:
  keycloak-network:
    driver: bridge

volumes:
  postgres-data:
  haproxy-run:
  gitea:
  jira_db_data:
  mailhog_data:
  jenkins_home:
