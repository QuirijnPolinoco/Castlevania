{
  "id": "04e56ad2-b061-404c-9db4-60ccc53610b0",
  "realm": "BDrealm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "bdabb151-58aa-40e3-8423-c6a7bc47d1a6",
        "name": "realm-admin",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "75a126b9-08fc-4487-8d9e-98af53271b96",
        "name": "app-user",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "49eb527e-bfeb-4a99-880f-410da6fa9274",
        "name": "default-roles-bdrealm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access"
          ]
        },
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "363df8d3-1085-4a2c-b8a0-57d0359eba3f",
        "name": "view-profile",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "7881edc7-ccfb-4fa2-a8e8-1c28d40e8733",
        "name": "hr",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "d12e8719-6f4c-4d00-a4d4-149565db2601",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "d2f04616-6270-4554-90d0-df55f5bc473b",
        "name": "uma_authorization",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      },
      {
        "id": "9e11e51d-cded-4352-919d-4008a9bcfca2",
        "name": "manage-account",
        "composite": false,
        "clientRole": false,
        "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0",
        "attributes": {}
      }
    ],
    "client": {
      "Jenkins": [],
      "realm-management": [
        {
          "id": "945895b7-6443-468e-8f99-243e026576bb",
          "name": "manage-users",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "c655cd97-667b-42f9-b76b-16f6045b009b",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "2d210d99-fa5b-47f5-9f75-fef64285321b",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "7931484c-f115-48b5-b097-1824d8f27647",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "767eb7df-e993-48df-9373-d0affaa16821",
          "name": "realm-admin",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "query-groups",
                "query-users",
                "create-client",
                "query-clients",
                "query-realms"
              ]
            }
          },
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "ca8b7e61-7bed-4f9a-ad1c-dd19f3c70c49",
          "name": "impersonation",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "dce5c4b5-2eff-4ad8-8042-fb51f3ecc374",
          "name": "view-clients",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "84bfdf04-3a1e-4f1e-a9c0-514853c0806c",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "e33a5cf2-dd29-48d2-819a-2c90102d0768",
          "name": "manage-authorization",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "9aafb8ec-141b-4aa4-8f09-c54609a2ba94",
          "name": "manage-events",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "4348d4f8-1da3-4d03-b84e-54593371c901",
          "name": "manage-realm",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "5b37583f-25e9-4e3e-991b-a2b256c3e16b",
          "name": "view-identity-providers",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "cbc23b13-2c31-4684-acf8-fd13b9cc1ad0",
          "name": "manage-clients",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "48f9af14-1f2e-4144-a7c8-68b464885d40",
          "name": "view-authorization",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "ba4d2c8d-9f56-4047-bf28-d3de1431ad95",
          "name": "view-events",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "db50cf59-410a-43dc-8061-c5f70fe97072",
          "name": "manage-identity-providers",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "7268b496-42c0-4932-9454-a4c079315d11",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "4eeadda1-26c3-4aa5-88d6-8bced48821f3",
          "name": "view-users",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "8dc5e7ab-d686-446e-8ad2-c0660659cc8a",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        },
        {
          "id": "f13dbf7d-0cae-4ad8-9ab0-f5e0adadf2f2",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "Gitea": [],
      "admin-cli": [],
      "account-console": [],
      "admin-portal": [],
      "broker": [
        {
          "id": "ae8b0e9f-2538-4814-93a4-82765ee6e1b7",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "d746a198-58b7-4a9f-a70a-aadacdbd0fb1",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "71005937-aee4-4372-8f03-699e07e0caaa",
          "name": "view-identity-providers",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "e153b7b2-dcb1-4eec-8713-fd506e798f51",
          "name": "manage-account-links",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "9225c26b-a7c5-4ad3-9f9a-bb8047e1116f",
          "name": "view-account",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "873f9a6c-ba31-4ff9-b4bc-a91144f53432",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "b350776f-12dc-47b6-b801-e8a7b827d5a2",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "5bd4f309-0b44-48fc-9bcd-c514e8fe6cb7",
          "name": "view-groups",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "756dac09-3a81-4dd1-bfdf-808fe2fb8b6f",
          "name": "view-applications",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "63956e86-1ad6-4848-b254-9d7f7faddda8",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "90045210-b599-42b6-8fad-de3faade5939",
          "name": "view-consent",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        },
        {
          "id": "05963fd7-6b1f-4f6f-a784-4a396dc397ab",
          "name": "manage-consent",
          "composite": false,
          "clientRole": true,
          "containerId": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
          "attributes": {}
        }
      ],
      "frontend-app": []
    }
  },
  "groups": [
    {
      "id": "b39ab6dd-c5ee-4549-9fa8-8c984ccaf5e0",
      "name": "Developer",
      "path": "/Developer",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {}
    },
    {
      "id": "70d019db-c7cb-42c6-97e5-41141660acb0",
      "name": "Employee",
      "path": "/Employee",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {
        "account": [
          "view-groups",
          "manage-account",
          "view-applications",
          "view-profile",
          "view-consent",
          "manage-consent"
        ]
      }
    },
    {
      "id": "081d9343-a0f9-416f-ab73-48ddf7fe1ede",
      "name": "Tester",
      "path": "/Tester",
      "subGroups": [],
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {
        "realm-management": [
          "manage-users",
          "realm-admin",
          "impersonation",
          "view-clients",
          "manage-authorization",
          "manage-events",
          "view-identity-providers",
          "manage-realm",
          "manage-clients",
          "view-events",
          "view-authorization",
          "view-users",
          "view-profile",
          "manage-identity-providers"
        ]
      }
    }
  ],
  "defaultRole": {
    "id": "49eb527e-bfeb-4a99-880f-410da6fa9274",
    "name": "default-roles-bdrealm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "04e56ad2-b061-404c-9db4-60ccc53610b0"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clients": [
    {
      "id": "4a0daa2a-4c4b-4150-849b-55342f9ff11b",
      "clientId": "account",
      "name": "Account Management",
      "rootUrl": "http://localhost",
      "baseUrl": "/realms/BDrealm/account",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/BDrealm/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "353398b2-f355-4bc8-a0ad-398063d67948",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "59b54977-2360-4eba-933f-c55127813851",
      "clientId": "account-console",
      "name": "Account Console",
      "rootUrl": "http://localhost",
      "baseUrl": "/realms/BDrealm/account",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/BDrealm/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "c13b074b-7496-4aed-9fa7-b2048465c9f2",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "fbf10937-d409-428c-aec0-5a275fc9837b",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "27554211-b504-458c-b2c6-8628a4c1ce1b",
      "clientId": "admin-portal",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "44f2ecd7-140b-49f1-a771-7d544faed48e",
      "clientId": "springboot-client",
      "enabled": true,
      "publicClient": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "sXcU4LFYYv4eX4W03MV4oWYwo7B6McQ7",
      "redirectUris": [
        "http://localhost:8080/login/oauth2/code/keycloak"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "baseUrl": "http://localhost:8080/",
      "rootUrl": "http://localhost:8080/",
      "standardFlowEnabled": true,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": true,
      "protocol": "openid-connect",
      "defaultClientScopes": [
        "web-origins", "role_list", "profile", "roles", "email"
      ]
    },
    {
      "id": "d746a198-58b7-4a9f-a70a-aadacdbd0fb1",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "a82b17f7-68c7-47fd-8077-6d54433cad09",
      "clientId": "frontend-app",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "44f2ecd7-140b-49f1-a771-7d544faed48f",
      "clientId": "Gitea",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:3000/",
      "adminUrl": "http://localhost:3000/",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "http://localhost:3000/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1749628213",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "true",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "7fc5e470-df48-4708-a7f1-208dd25520ae",
      "clientId": "Jenkins",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:8089/securityRealm/finishLogin"
      ],
      "webOrigins": [
        "http://localhost:8089"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1749629017",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "true",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "cbfe2c6e-6c71-4b45-bce7-6a1d0945ce62",
      "clientId": "realm-management",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [],
      "optionalClientScopes": [
        "offline_access"
      ]
    },
    {
      "id": "79f1399c-7c24-4c30-ae75-6e796fae83cd",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/BDrealm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/BDrealm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "328a15d0-9146-4661-9de9-881b09688e16",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    }
  ],

  "users": [
    {
      "username": "alice",
      "firstName": "alice",
      "lastName": "in wonderland",
      "enabled": true,
      "email": "alice@example.com",
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "alicepass", "temporary": false }],
      "groups": ["Tester", "Employee"],
      "realmRoles": ["hr", "realm-admin", "offline_access", "uma_authorization"],
      "clientRoles": {
        "account": [],
        "account-console": [],
        "realm-management": ["view-users", "view-profile", "manage-users"]
      }
    },
    {
      "username": "bob",
      "firstName": "bob",
      "lastName": "de bouwer",
      "enabled": true,
      "email": "bob@example.com",
      "emailVerified": true,
      "credentials": [{ "type": "password", "value": "bobpass", "temporary": false }],
      "groups": ["Developer", "Employee"],
      "realmRoles": ["app-user", "offline_access"],
      "clientRoles": {
        "account": [],
        "account-console": [],
        "realm-management": ["view-users", "view-profile"]
      }
    }

  ],

  "clientScopes": [
    {
      "id": "f9f708a5-fa0a-4d45-8bc6-a5f3efb155a1",
      "name": "roles",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5c182197-f4bb-40c9-b6e9-30a9988f8c10",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "54ca5719-c3e4-490f-8f6d-09730acf37c4",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "607a117f-e498-487f-9295-a482b530a66a",
      "name": "web-origins",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "67e7d523-55c8-45bd-82b3-b34d6ddf795f",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "4bdad521-ea70-44cd-8612-1123bc2ac559",
      "name": "role_list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "50c3ae0e-94dc-470b-afdb-7aba746ea394",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "a8418cbc-4b10-4aef-ad42-a29ecefe6408",
      "name": "email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b639360e-d3bf-48e1-a2c2-fc75978ef09b",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ece8ef0c-b759-4e45-b426-1f9750b7f441",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "51bf6d20-2508-458c-a22b-145dee194234",
      "name": "profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cc3c7a5c-1739-4058-92d7-46c4bb6c818d",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "c340f3b9-763b-4983-a178-fc09fb9a1ed0",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "58e5a951-7920-443b-a5bd-83ccbc4fbb73",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "05a3f580-ae62-4b2e-a89c-686a55b54178",
      "name": "acr",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "4dbe4b5e-5688-4589-bbf7-21266bbb8640",
          "name": "acr",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "acr",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "5211a763-442c-45d8-bee5-745b9722f664",
      "name": "Employee",
      "attributes": {}
    }
  ],
  "defaultDefaultClientScopes": [],
  "defaultOptionalClientScopes": [
    "offline_access"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "25363e44-79ed-47eb-abf4-9ed0c3f68960",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "57ca899a-c95b-463c-8577-247221ac3043",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "bc61b8c5-8c18-42d1-82e7-0d4aed29bdb9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "ad65e33b-274b-4c52-aea9-cbac96359f79",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b56fb46f-9de2-4c1d-89d6-ea4b369758b2",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "73ecc46a-feca-44d1-8aa4-46906c4a1bc2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "80a748ce-b33d-4bdb-834f-43deac815f72",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ff69d548-7d36-4b5e-92fc-c99c66da0c6f",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "e0cef76a-4479-4dea-a5d6-a2982d5d7a70",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "0b13dbc2-e089-4700-bf7b-edf6c21cdfa7",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d1473713-c5cc-4f86-8feb-361632ccc44c",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "61c27cca-149d-41c3-b321-69ba7065eec8",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "d75f0154-1d84-4f90-877c-7ac8b0f6e9bd",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "74e3214c-afcf-42fc-98c2-1f45958d149e",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "99f15565-dd56-46cc-85d9-f809313bca83",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "eee46e76-099f-4d81-b4bc-393996146a93",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b951d807-a426-4748-8052-cd88335d6bc4",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7a766bda-2575-47ad-9d96-26be0b2642cd",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "829c77a6-deda-49e5-81bf-29a4d92b0fea",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c970dc10-ae6a-45d5-b7e5-301a92a59317",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6cf7ce97-c070-47b1-b750-30c00f15629c",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "74b31709-93a4-4d7f-ac1c-c57fd03d6280",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "05b50119-432a-4bea-a7cd-c23a8daa9056",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fb9f226c-c7f7-446a-a0ef-074a7045bc9d",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d172209a-5069-4cf4-8db6-23ec087990cf",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c7992c7f-a9b2-44da-92d3-dc899d0bafe2",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e0e85dea-8949-487d-b824-7149ff157207",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d973ad6c-8bf4-4509-a288-69a65ef3cb59",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e7d30bcf-733d-47cc-b53d-4835dfc72385",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e2a31d62-75f6-413f-bda6-1888d77675d0",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef73d7c5-001d-49bf-a9c2-f1a6d1c81a90",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b8a67a91-cc4a-46e4-bb70-b7fe13ca72e2",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b9994e4b-2851-4d6d-99fe-5ebd583e9a71",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "309e4faf-0637-407d-ad89-387153029402",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "76ce8cca-5388-4d02-80ab-15b025ab54be",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.2.5",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}